Given an array of length N and an integer x, you need to find if x is present in the array or not. Return true or false.
Do this recursively.
Input Format

Line 1 : An Integer N i.e. size of array
Line 2 : N integers which are elements of the array, separated by spaces
Line 3 : Integer x
Constraints

1 <= N <= 10^3

Output Format

true or false

Sample Input 0

3
9 8 10
8
Sample Output 0

true
Sample Input 1

3
9 8 10
2
Sample Output 1

false

=============================================================

//linear search


import java.util.*;

public class Main {
    
    // Recursive function to search for x in array arr starting from index
    static boolean search(int[] arr, int x, int index) {
        // Base case: If index reaches end of array, return false
        if (index == arr.length) {
            return false;
        }
        
        // Recursive case: Check if current element is equal to x
        if (arr[index] == x) {
            return true;
        }
        
        // Recursively search in the rest of the array
        return search(arr, x, index + 1);
    }
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Read size of array
        int N = scanner.nextInt();
        
        // Read array elements
        int[] arr = new int[N];
        for (int i = 0; i < N; i++) {
            arr[i] = scanner.nextInt();
        }
        
        // Read integer x to search
        int x = scanner.nextInt();
        
        // Check if x is present in array using recursive function
        boolean result = search(arr, x, 0); // Start searching from index 0
        
        // Output the result
        System.out.println(result);
        
        scanner.close();
    }
}
